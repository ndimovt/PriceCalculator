Index: src/main/java/io/github/ndimovt/FileReading.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.ndimovt;\r\n\r\nimport org.apache.poi.ss.usermodel.Cell;\r\nimport org.apache.poi.ss.usermodel.Row;\r\nimport org.apache.poi.ss.usermodel.Sheet;\r\nimport org.apache.poi.ss.usermodel.Workbook;\r\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\r\n\r\nimport java.io.*;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class FileReading {\r\n    private Map<String, String> readInformation(String year) {\r\n        Map<String, String> agricultureInfo = new HashMap<>();\r\n        try {\r\n            FileInputStream fileReader = new FileInputStream(\"C:\\\\Users\\\\Nikolai\\\\Desktop\\\\Prices.xlsx\");\r\n            Workbook readInfo = new XSSFWorkbook(fileReader);\r\n            Sheet sheet = readInfo.getSheet(year);\r\n            for(Row row: sheet){\r\n                Cell keyCell = row.getCell(0);\r\n                Cell valueCell = row.getCell(1);\r\n                if((keyCell != null) && (valueCell != null)){\r\n                    String key = keyCell.toString();\r\n                    String value = valueCell.toString();\r\n                    agricultureInfo.put(key,value);\r\n                }\r\n            }\r\n            closingStreams(readInfo,fileReader);\r\n        } catch (FileNotFoundException fnf) {\r\n            System.out.println(\"Missing file!\");\r\n            fnf.printStackTrace();\r\n        }catch (IOException ie){\r\n            ie.printStackTrace();\r\n        }\r\n        return agricultureInfo;\r\n    }\r\n    public void getSpecificAgricultureInfo(String year, String agricultureProduct){\r\n        for(Map.Entry<String,String> specificProductInfo : readInformation(year).entrySet()){\r\n            if(specificProductInfo.getKey().contains(agricultureProduct)){\r\n                System.out.println(specificProductInfo.getKey()+\" : \"+specificProductInfo.getValue());\r\n            }else {\r\n                System.out.println(\"Database doesn't contain information for \"+agricultureProduct);\r\n            }\r\n        }\r\n    }\r\n    public void getEntireAgricultureProductInfo(String year){\r\n        for(Map.Entry<String, String> allProductsInfo : readInformation(year).entrySet()){\r\n            System.out.println(allProductsInfo.getKey()+\" : \"+allProductsInfo.getValue());\r\n        }\r\n    }\r\n    private void closingStreams( Workbook workbook, FileInputStream fileInputStream) throws IOException{\r\n        if(workbook != null){\r\n            workbook.close();\r\n        }\r\n        if(fileInputStream != null){\r\n            fileInputStream.close();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/io/github/ndimovt/FileReading.java b/src/main/java/io/github/ndimovt/FileReading.java
--- a/src/main/java/io/github/ndimovt/FileReading.java	
+++ b/src/main/java/io/github/ndimovt/FileReading.java	
@@ -9,6 +9,8 @@
 import java.io.*;
 import java.util.HashMap;
 import java.util.Map;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 public class FileReading {
     private Map<String, String> readInformation(String year) {
@@ -36,12 +38,12 @@
         return agricultureInfo;
     }
     public void getSpecificAgricultureInfo(String year, String agricultureProduct){
-        for(Map.Entry<String,String> specificProductInfo : readInformation(year).entrySet()){
-            if(specificProductInfo.getKey().contains(agricultureProduct)){
-                System.out.println(specificProductInfo.getKey()+" : "+specificProductInfo.getValue());
+        Map <String,String> specificProductInfo=readInformation(year);
+            if(readInformation(year).get().equals(agricultureProduct)){
+                System.out.println(specificProductInfo.values());
             }else {
-                System.out.println("Database doesn't contain information for "+agricultureProduct);
-            }
+               System.out.println("Database doesn't contain information for "+agricultureProduct);
+           // }
         }
     }
     public void getEntireAgricultureProductInfo(String year){
